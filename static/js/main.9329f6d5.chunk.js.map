{"version":3,"sources":["Components/css/colorSelector.module.css","Components/css/table.module.css","Components/table.jsx","Components/colorSelector.jsx","Components/mainPanel.jsx","App.js","serviceWorker.js","index.js","Components/css/mainPanel.module.css"],"names":["module","exports","iker","selected_list","range","start","end","foo","i","push","Table","props","state","row","column","red","Red","green","Green","blue","Blue","alpha","Alpha","fillAll","fb","Selective","cr","cg","cb","ca","onMouseLeave","bind","nextProps","this","setState","Rows","Columns","prevProps","prevState","map","style","backgroundColor","console","log","e","target","removeEventListener","width","borderColor","height","addEventListener","rows","columns","row_tr","className","classes","tdName","ar","onClick","td_clicked","onMouseOver","weHover","Leave","refs","Div","Component","ColorSelector","handleChange","event","value","name","onChange","rato","hariyo","nilo","aleph","colorTable","color","mainDiv","background","sliderDiv","onSubmit","handleSubmit","type","step","max","min","slider","Acolor","MainPanel","addRows","addColumns","deleteRows","alert","deleteColumns","convertSelected","changeColors","fillColor","Top","tableDiv","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9329f6d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorDiv\":\"colorSelector_colorDiv__3ZxzF\",\"sliderDiv\":\"colorSelector_sliderDiv__nXZKR\",\"mainDiv\":\"colorSelector_mainDiv__BlCnD\",\"Acolor\":\"colorSelector_Acolor__Sw5TB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Div\":\"table_Div__1sfUB\",\"tdName\":\"table_tdName__3Je6p\"};","import React, { Component } from \"react\";\r\nimport classes from \"./css/table.module.css\";\r\nlet iker = 0;\r\nlet selected_list =[]\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      row: 1,\r\n      column: 1,\r\n      red: this.props.Red,\r\n      green: this.props.Green,\r\n      blue: this.props.Blue,\r\n      alpha: this.props.Alpha,\r\n      fillAll: this.props.fb,\r\n      Selective: this.props.Selective,\r\n      cr: \"\",\r\n      cg: \"\",\r\n      cb: \"\",\r\n      ca: \"\",\r\n    };\r\n    this.onMouseLeave = this.onMouseLeave.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      row: nextProps.Rows,\r\n      column: nextProps.Columns,\r\n      Selective: nextProps.Selective,\r\n      cr: nextProps.Red,\r\n      cg: nextProps.Green,\r\n      cb: nextProps.Blue,\r\n      ca: nextProps.Alpha,\r\n      fillAll: nextProps.fb,\r\n      \r\n    });\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.fillAll !== prevProps.fillAll) {\r\n      // console.log(\"aaaaaaaaaaaaaaaaaaa\");\r\n      this.setState({\r\n        red: this.state.cr,\r\n        green: this.state.cg,\r\n        blue: this.state.cb,\r\n        alpha: this.state.ca,\r\n      });\r\n    }\r\n    \r\n    else if (this.props.Selective !== prevProps.Selective) {\r\n      selected_list.map((i) => {\r\n        i.style.backgroundColor = `rgba(${this.state.cr},${this.state.cg},${this.state.cb},${this.state.ca})`;\r\n      })\r\n      selected_list=[]\r\n    }\r\n    else {\r\n      console.log(\"something\");\r\n    }\r\n  }\r\n  td_clicked(e) {\r\n    selected_list.push(e.target);    \r\n    console.log(selected_list);\r\n    e.target.removeEventListener(\"mouseleave\", e.target.onMouseLeave);\r\n  }\r\n  weHover(e) {\r\n    e.target.style.width = \"80px\";\r\n    e.target.style.borderColor = \"blue\";\r\n    e.target.style.height = \"80px\";\r\n    e.target.addEventListener(\"mouseleave\", e.target.onMouseLeave);\r\n  }\r\n  onMouseLeave(e) {\r\n    e.target.style.borderColor = \"black\";\r\n    e.target.style.width = \"70px\";\r\n    e.target.style.height = \"70px\";\r\n  }\r\n  render() {\r\n    //main render for table\r\n    let red = this.state.red;\r\n    let green = this.state.green;\r\n    let blue = this.state.blue;\r\n    let alpha = this.state.alpha;\r\n    let rows = this.state.row;\r\n    let columns = this.state.column;\r\n    let row_tr = range(0, rows).map((i) => {\r\n      return (\r\n        <tr\r\n          className={classes.tdName}\r\n        >\r\n          {range(0, columns).map((i) => {\r\n            let ar = iker++;\r\n            return (\r\n              <td\r\n                onClick={this.td_clicked}\r\n                onMouseOver={this.weHover}\r\n                onMouseLeave={this.Leave}\r\n                refs={`tdname${ar}`}\r\n                style={{\r\n                  backgroundColor: `rgba(${red},${green},${blue},${alpha})`,\r\n                }}\r\n              ></td>\r\n            );\r\n          })}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className={classes.Div}>\r\n        <table>\r\n          <thead>{row_tr}</thead>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction get_random_integer(maximum) {\r\n  return Math.floor(Math.random() * Math.floor(maximum));\r\n}\r\nfunction range(start, end) {\r\n  var foo = [];\r\n  for (var i = start; i < end; i++) {\r\n    foo.push(i);\r\n  }\r\n  return foo;\r\n}\r\nasync function changeColor(red, green, blue, alpha) {\r\n  console.log(red, green, blue, alpha);\r\n  for (let i of selected_list) {\r\n    if (document.getElementById(i) === null) {\r\n      console.log(\"inside\")\r\n   \r\n    } else {\r\n      console.log(i)\r\n    }  \r\n\r\n  }\r\n}\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./css/colorSelector.module.css\";\r\n\r\nclass ColorSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      red: this.props.Red,\r\n      green: this.props.Green,\r\n      blue: this.props.Blue,\r\n      alpha: this.props.Alpha,\r\n    };\r\n  }\r\n   handleChange = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      ...this.state,\r\n      [event.target.name]: value,\r\n    });\r\n    this.props.onChange(\r\n      this.state.red,\r\n      this.state.green,\r\n      this.state.blue,\r\n      this.state.alpha\r\n    );\r\n \r\n  };\r\n  render() {\r\n    let rato = this.state.red;\r\n    let hariyo = this.state.green;\r\n    let nilo = this.state.blue;\r\n    let aleph = this.state.alpha;\r\n    let colors = [\r\n      { color: \"black\", value: \"rgb(0, 0, 0)\" },\r\n      { color: \"white\", value:\" rgb(255,255,255)\" },\r\n      { color: \"red\", value: \"rgb(255, 0, 0)\" },\r\n      { color:\" green\", value: \"rgb(0, 0, 0)\" },\r\n      { color:\" blue\", value: \"rgb(0, 0, 0)\" },\r\n      { color: \"yellow\", value: \"rgb(0, 0, 0)\" },\r\n      { color: \"purple\", value: \"rgb(0, 0, 0)\" },\r\n      { color: \"grey\", value: \"rgb(0, 0, 0)\" }, \r\n    ];\r\n    let colorTable = colors.map((i) => {\r\n      return (\r\n        <tr>\r\n          <td>{i.color}</td>\r\n          <td>{i.value}</td>\r\n        </tr>\r\n      );\r\n    } )\r\n    return (\r\n      <div className={classes.mainDiv} style={{\r\n        background: `rgba(${rato},${hariyo},${nilo},${aleph})`,\r\n        color: `rgba(${255-rato},${255-hariyo},${255-nilo},1)`\r\n      }}> \r\n        <h1> Color Selector</h1>\r\n        <div className={classes.sliderDiv}>\r\n          <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type={\"range\"}\r\n            step={\"1\"}\r\n            max={\"255\"}\r\n            name=\"red\"\r\n            min={\"0\"}\r\n            className={classes.slider}\r\n            onChange={this.handleChange}\r\n          ></input>\r\n          &emsp;\r\n          <label>Red:{this.state.red}</label>\r\n          <input\r\n            type={\"range\"}\r\n            max={\"255\"}\r\n            min={\"0\"}\r\n            step={\"1\"}\r\n            name=\"green\"\r\n            className={classes.slider}\r\n            onChange={this.handleChange}\r\n          ></input>\r\n          &emsp;\r\n          <label>Green:{this.state.green}</label>\r\n          <input\r\n            type={\"range\"}\r\n            max={\"255\"}\r\n            min={\"0\"}\r\n            name=\"blue\"\r\n            step=\"1\"\r\n            className={classes.slider}\r\n            onChange={this.handleChange}\r\n          ></input>\r\n          &emsp;\r\n          <label>Blue:{this.state.blue}</label>\r\n          <input\r\n            type={\"range\"}\r\n            max={\"1\"}\r\n            min={\"0\"}\r\n            name=\"alpha\"\r\n            step=\"0.1\"\r\n            className={classes.slider}\r\n            onChange={this.handleChange}\r\n          ></input>\r\n          &emsp;\r\n          <label>Alpha:{this.state.alpha}</label><br/>\r\n          </form>\r\n        </div>\r\n        <h4>Some Basic Color Value</h4>\r\n        <table className={classes.Acolor}>\r\n          <tr>\r\n            <th>Color</th>\r\n            <th>Values</th>\r\n          </tr>\r\n          {colorTable}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ColorSelector;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"./table\";\r\nimport ColorSelector from \"./colorSelector\";\r\nimport classes from \"./css/mainPanel.module.css\";\r\nclass MainPanel extends Component {\r\n  state = {\r\n    Red: 55,\r\n    Green: 55,\r\n    Blue: 255,\r\n    Alpha: 1,\r\n    Rows: 1,\r\n    Columns: 1,\r\n    fillAll: false,\r\n    Selective: false,\r\n  };\r\n  addRows = (event) => {\r\n    this.setState({ Rows: this.state.Rows + 1 });\r\n  };\r\n  addColumns = (event) => {\r\n    console.log(\"enter\");\r\n\r\n    this.setState((state) => ({ Columns: this.state.Columns + 1 }));\r\n  };\r\n  deleteRows = (event) => {\r\n    if (this.state.Rows > 1) {\r\n      this.setState((state) => ({ Rows: this.state.Rows - 1 }));\r\n    } else {\r\n      alert(\"need at least one row\");\r\n    }\r\n  };\r\n  deleteColumns = (event) => {\r\n    if (this.state.Columns > 1) {\r\n      this.setState((state) => ({ Columns: this.state.Columns - 1 }));\r\n    } else {\r\n      alert(\"need at least one column\");\r\n    }\r\n    };\r\n    convertSelected = (e) => {\r\n        this.setState({ Selective: !this.state.Selective });\r\n    }\r\n  changeColors = (Red, Green, Blue, Alpha) => {\r\n    this.setState({ Red: Red, Green: Green, Blue: Blue, Alpha: Alpha });\r\n  };\r\n    fillColor = (event) => {\r\n        console.log(this.state.fillAll);\r\n        console.log(\"clicked\");\r\n      this.setState({ fillAll: !this.state.fillAll });\r\n     console.log(\"clicked\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={classes.mainDiv}>\r\n        <div\r\n          className={classes.Top}\r\n          style={{\r\n            backgroundColor: `rgba(${this.state.Red},${this.state.Green},${this.state.Blue},${this.state.Alpha}`,\r\n            color: `rgba(${255 - this.state.Red},${255 - this.state.Green},${\r\n              255 - this.state.Blue\r\n            },1`,\r\n          }}\r\n        >\r\n          <button name=\"Rows\" onClick={this.addRows}>\r\n            Insert Rows\r\n          </button>\r\n\r\n          <button name=\"Columns\" onClick={this.addColumns}>\r\n            Insert Columns\r\n          </button>\r\n\r\n          <button onClick={this.deleteRows}>Delete Rows</button>\r\n\r\n          <button onClick={this.deleteColumns}>Delete Columns</button>\r\n          <button onClick={this.fillColor}>Fill Color </button>\r\n                <button onClick={this.convertSelected}> Convert Selected</button>\r\n        </div>\r\n        <div className={classes.tableDiv}>\r\n          <Table\r\n                    Rows={this.state.Rows}\r\n                    Columns={this.state.Columns}\r\n                    Red={this.state.Red}\r\n                    Green={this.state.Green}\r\n                    Blue={this.state.Blue}\r\n                    Alpha={this.state.Alpha}\r\n                    fillAll={this.state.fillAll}\r\n                    Selective={this.state.Selective}\r\n          />\r\n        </div>\r\n        <div className={classes.colorTable}>\r\n          <ColorSelector\r\n            onChange={this.changeColors}\r\n            Red={this.state.Red}\r\n            Green={this.state.Green}\r\n            Blue={this.state.Blue}\r\n                    Alpha={this.state.Alpha}\r\n                \r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MainPanel;\r\n","import React from 'react';\r\n// import ColorSelector from \"./Components/colorSelector\";\r\nimport MainPanel from \"./Components/mainPanel\";\r\n// import Table from \"./Components/table\";\r\nfunction App() {\r\n\r\n  return (\r\n    <div>\r\n      <MainPanel />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"mainPanel_mainDiv__2-8GG\",\"Top\":\"mainPanel_Top__gc2Fi\",\"tableDiv\":\"mainPanel_tableDiv__i-fpf\",\"colorTable\":\"mainPanel_colorTable__yqM6W\"};"],"sourceRoot":""}